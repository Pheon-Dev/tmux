set -s default-terminal 'xterm-256color'
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

# C-b to C-a Keybindings
set -g prefix C-a 
unbind-key C-b
bind-key C-a send-prefix

# Clear Screen
bind-key -n "C-g" send-keys 'C-l'
bind-key -n "C-p" send-keys 'C-l' "C-p" "Enter"

## Switch Panes
# C-A o
# C-A {
# C-A }
# C-A <space>

# use telescope-tmux for picking sessions and windows 
# bind s display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux sessions quit_on_select=true"
# bind w display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux windows quit_on_select=true"

# Split Windows Key Bindings
bind C-j split-window -h -c "#{pane_current_path}"
bind C-k split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# bind -n S-Up move-pane -h -t '.{up-of}'
# bind -n S-Right move-pane -t '.{right-of}'
# bind -n S-Left move-pane -t '.{left-of}'
# bind -n S-down move-pane -h -t '.{down-of}'

# # Smart pane switching with awareness of Vim splits.
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
#
# bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
# bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
# bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
# bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R' 
#

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind -T copy-mode-vi M-h resize-pane -L 1
bind -T copy-mode-vi M-j resize-pane -D 1
bind -T copy-mode-vi M-k resize-pane -U 1
bind -T copy-mode-vi M-l resize-pane -R 1

set -g mouse on
set -ga terminal-overrides ',*256color*:smcup@:rmcup@'

# Pane Navigation
bind -r h select-pane -L # Move Left
bind -r j select-pane -D # Move Down 
bind -r k select-pane -U # Move Up  
bind -r l select-pane -R # Move Right
bind > swap-pane -D # Swap current pane with the next one
bind < swap-pane -U # Swap current pane with the previous one

# Pane Resizing
bind -r H resize-pane -L 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 3

# Window Navigation
unbind n 
unbind p 
bind -r C-h previous-window # Select Previous Window
bind -r C-l next-window # Select Next Window
bind Tab last-window # Move to Last Active Window

# Display 
set -g base-index 1         # Start Windows Numbering from 1
setw -g pane-base-index 1   # Make Pane Numbering Consistent with Windows

setw -g automatic-rename on # Rename Window to Reflect Current Window  
set -g renumber-windows on  # Renumber Windows When a Window is Closed

set -g set-titles on        # Set Terminal Title 

set -g display-panes-time 800   # Slightly longer Pane Indicators Display Time 
set -g display-time 1000        # Slightly longer Status Messages Display Time 

set -g status-interval 2       # Redraw Status Line Every 10 Seconds

set-option -g status-position top
# Clear Both Screen And History
# bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# Continuum
# set -g @continuum-restore 'on'

# Activity
set -g monitor-activity on
set -g visual-activity off

set -g @shell_mode 'vi'
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default
set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'
# set -g @custom_copy_command 'my-clipboard-copy --some-arg'
# or
set -g @override_copy_command 'my-clipboard-copy --some-arg'

# Toggle Mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"

# URL View
bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, network-ping, weather, time
set -g @dracula-plugins "git time battery network"

# available colors: white, gray, dark_gray, light_purple, dark_purple, cyan, green, orange, red, pink, yellow
# set -g @dracula-[plugin-name]-colors "[background] [foreground]"
set -g @dracula-git-colors "black_one grey"
set -g @dracula-time-colors "black_one grey"
set -g @dracula-cpu-usage-colors "black_one grey"
set -g @dracula-ram-usage-colors "black_one grey"
set -g @dracula-battery-colors "black_one red"
set -g @dracula-network-colors "black_one green"
set -g @dracula-network-bandwidth-colors "black_one t_blue8"

# set -g @dracula-show-powerline true
# for left
set -g @dracula-show-left-sep â‹®
set -g @dracula-show-left-sep â‹®

# for right symbol (can set any symbol you like as seperator)
set -g @dracula-show-right-sep â‹®
set -g @dracula-show-right-sep â‹®

set -g @dracula-show-flags true
# the default is 5, it can accept any number
set -g @dracula-refresh-rate 5
# it can accept `session`, `smiley`, `window`, or any character.
set -g @dracula-show-left-icon smiley
# default is 1, it can accept any number and 1 disables padding.
set -g @dracula-left-icon-padding 1
set -g @dracula-border-contrast true

set -g @dracula-cpu-usage-label "ğŸ–µ "

set -g @dracula-cpu-display-load true

set -g @dracula-gpu-usage-label "GPU"

set -g @dracula-ram-usage-label ""
# set -g @dracula-time-label "âŒš"

set -g @dracula-ping-server "google.com"
set -g @dracula-ping-rate 5

set -g @dracula-show-timezone false

set -g @dracula-day-month true

set -g @dracula-military-time true

set -g @dracula-git-disable-status true

# default is âœ“. Avoid using non unicode characters that bash uses like $, * and ! 
set -g @dracula-git-show-current-symbol ïŠ–

# default is unicode !. Avoid bash special characters 
set -g @dracula-git-show-diff-symbol îœ‚

# default is unicode no message
set -g @dracula-git-no-repo-message ""

set -g @dracula-show-fahrenheit false

# List of plugins
set -g @plugin 'shuber/tmux-git'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'Pheon-Dev/tmux-sidebar'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
